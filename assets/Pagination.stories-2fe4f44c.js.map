{"version":3,"file":"Pagination.stories-2fe4f44c.js","sources":["../../src/components/pagination/pageLink.tsx","../../src/components/pagination/Pagination.tsx"],"sourcesContent":["import { PageLinkProps } from '@/components/pagination/page-link.interface';\nimport clsx from 'clsx';\n\nexport const PageLink: React.FC<PageLinkProps> = ({\n  children,\n  active,\n  disabled,\n  Comp = 'a',\n  ...props\n}: PageLinkProps) => {\n  return (\n    <Comp\n      className={clsx(\n        'zep-no-underline',\n        'sm:zep-p-0.5',\n        'zep-p-0.25',\n        'zep-w-2.5',\n        'zep-h-2.5',\n        'sm:zep-w-3',\n        'sm:zep-h-3',\n        'zep-cursor-pointer',\n        'zep-typography-link',\n        'zep-text-typography-dark-70/70',\n        {\n          'zep-border-b-2 zep-text-neutral-800': active,\n          'zep-cursor-not-allowed zep-pointer-events-none': disabled,\n          'hover:zep-border-b-1 zep-box-border zep-text-neutral-800': !active,\n        },\n      )}\n      aria-current={active ? 'page' : undefined}\n      {...props}\n    >\n      <span\n        className={clsx(\n            'zep-w-2',\n            'zep-h-2',\n            'zep-leading-2',\n            'zep-flex',\n            'zep-items-center',\n            'zep-justify-center',\n            {\n                'zep-text-typography-dark-100': active,\n                'zep-text-typography-dark-40/40': disabled,\n            },\n        )}\n      >\n        {children}\n      </span>\n    </Comp>\n  );\n};\n","import { PageLink } from '@/components/pagination/pageLink';\nimport { PaginationProps } from '@/components/pagination/pagination.interface';\nimport clsx from 'clsx';\nimport { FC } from 'react';\nimport { Button, ButtonVariant } from '../button';\nexport const getPaginationItems = (currentPage: number, lastPage: number, maxLength: number) => {\n  const res: Array<number> = [];\n  // handle lastPage less than maxLength\n  if (lastPage <= maxLength) {\n    for (let i = 1; i <= lastPage; i++) {\n      res.push(i);\n    }\n  }\n  // handle ellipsis logics\n  else {\n    const firstPage = 1;\n    const confirmedPagesCount = 3;\n    const deductedMaxLength = maxLength - confirmedPagesCount;\n    const sideLength = deductedMaxLength / 2;\n    // handle ellipsis in the middle\n    if (currentPage - firstPage < sideLength || lastPage - currentPage < sideLength) {\n      for (let j = 1; j <= sideLength + firstPage; j++) {\n        res.push(j);\n      }\n      res.push(NaN);\n      for (let k = lastPage - sideLength; k <= lastPage; k++) {\n        res.push(k);\n      }\n    }\n    // handle two ellipsis\n    else if (currentPage - firstPage >= deductedMaxLength && lastPage - currentPage >= deductedMaxLength) {\n      const deductedSideLength = sideLength - 1;\n      res.push(1);\n      res.push(NaN);\n      for (let l = currentPage - deductedSideLength; l <= currentPage + deductedSideLength; l++) {\n        res.push(l);\n      }\n      res.push(NaN);\n      res.push(lastPage);\n    }\n    // handle ellipsis not in the middle\n    else {\n      const isNearFirstPage = currentPage - firstPage < lastPage - currentPage;\n      let remainingLength = maxLength;\n      if (isNearFirstPage) {\n        for (let m = 1; m <= currentPage + 1; m++) {\n          res.push(m);\n          remainingLength -= 1;\n        }\n        res.push(NaN);\n        remainingLength -= 1;\n        for (let n = lastPage - (remainingLength - 1); n <= lastPage; n++) {\n          res.push(n);\n        }\n      } else {\n        for (let o = lastPage; o >= currentPage - 1; o--) {\n          res.unshift(o);\n          remainingLength -= 1;\n        }\n        res.unshift(NaN);\n        remainingLength -= 1;\n        for (let p = remainingLength; p >= 1; p--) {\n          res.unshift(p);\n        }\n      }\n    }\n  }\n  return res;\n};\nconst Pagination: FC<PaginationProps> = ({\n  Comp,\n  currentPage,\n  lastPage,\n  maxLength,\n  setCurrentPage,\n  totalElements,\n}: PaginationProps) => {\n  const pages = getPaginationItems(currentPage, lastPage, maxLength);\n  const itemsPerPage = totalElements / lastPage;\n  return (\n    <div\n        className={clsx(\n            'zep-flex',\n            'zep-flex-col',\n            'sm:zep-gap-1.5',\n            'zep-gap-0.5',\n            'zep-items-center',\n            'zep-text-center')}\n        data-testid=\"zep-pagination\"\n    >\n      <div className={clsx('zep-flex', 'zep-gap-0.5')}>\n        <Button className='zep-text-typography-dark-70/70' disabled={currentPage === 1} icon='arrow-long-left' onClick={() => setCurrentPage(currentPage - 1)} variant={ButtonVariant.DarkTertiary}/>\n        {pages.map((pageNumber, idx) => (\n          <PageLink\n            Comp={Comp}\n            key={idx}\n            active={currentPage === pageNumber}\n            disabled={isNaN(pageNumber)}\n            onClick={() => setCurrentPage(pageNumber)}\n          >\n            {!isNaN(pageNumber) ? pageNumber : '...'}\n          </PageLink>\n        ))}\n        <Button className='zep-text-typography-dark-70/70' disabled={currentPage === lastPage} icon='arrow-long-right' onClick={() => setCurrentPage(currentPage + 1)} variant={ButtonVariant.DarkTertiary}/>\n      </div>\n      <ul className={clsx('zep-flex ', 'zep-gap-0.25')}>\n        <li>{itemsPerPage * currentPage - itemsPerPage + 1}</li>\n        <li>-</li>\n        <li>{itemsPerPage * currentPage}</li>\n        <li>von</li>\n        <li>{totalElements}</li>\n      </ul>\n    </div>\n  );\n};\nexport { Pagination };\n"],"names":["PageLink","children","active","disabled","Comp","props","jsx","clsx","getPaginationItems","currentPage","lastPage","maxLength","res","i","deductedMaxLength","sideLength","j","k","deductedSideLength","l","isNearFirstPage","remainingLength","m","n","o","p","Pagination","setCurrentPage","totalElements","pages","itemsPerPage","jsxs","Button","ButtonVariant","pageNumber","idx"],"mappings":"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"}